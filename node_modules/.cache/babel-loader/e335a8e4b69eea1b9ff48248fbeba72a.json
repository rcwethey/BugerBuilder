{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/rcwethey/BugerBuilder/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport styles from './Input.module.css';\n\nconst input = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: styles.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: styles.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: styles.InputElement,\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, props.elementConfig.options.map(option => React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, option.displayValue)));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: styles.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: styles.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/ryanwethey/Documents/rcwethey/BugerBuilder/src/components/UI/Input/Input.js"],"names":["React","styles","input","props","inputElement","elementType","InputElement","elementConfig","value","options","map","option","displayValue","Input","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAOD,KAAK,CAACE,WAAb;AACE,SAAM,OAAN;AACED,MAAAA,YAAY,GAAG;AACb,QAAA,SAAS,EAAEH,MAAM,CAACK;AADL,SAETH,KAAK,CAACI,aAFG;AAGb,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAIA;;AACF,SAAM,UAAN;AACEJ,MAAAA,YAAY,GAAG;AACb,QAAA,SAAS,EAAEH,MAAM,CAACK;AADL,SAETH,KAAK,CAACI,aAFG;AAGb,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAIA;;AACF,SAAM,QAAN;AACEJ,MAAAA,YAAY,GAAI;AACd,QAAA,SAAS,EAAEH,MAAM,CAACK,YADJ;AAEd,QAAA,KAAK,EAAEH,KAAK,CAACK,KAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGXL,KAAK,CAACI,aAAN,CAAoBE,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,IACrC;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACH,KAApB;AAA2B,QAAA,KAAK,EAAEG,MAAM,CAACH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDG,MAAM,CAACC,YAAxD,CADD,CAHW,CAAhB;AAQA;;AACF;AACER,MAAAA,YAAY,GAAG;AACb,QAAA,SAAS,EAAEH,MAAM,CAACK;AADL,SAETH,KAAK,CAACI,aAFG;AAGb,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAIA;AA5BJ;;AA+BA,SACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACY,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAEZ,MAAM,CAACa,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCX,KAAK,CAACY,KAAvC,CADF,EAEGX,YAFH,CADF;AAMD,CAxCD;;AA2CA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport styles from './Input.module.css';\n\nconst input = (props) => {\n  let inputElement = null;\n\n  switch(props.elementType) {\n    case ('input'):\n      inputElement = <input \n        className={styles.InputElement} \n        {...props.elementConfig} \n        value={props.value}/>;\n      break;\n    case ('textarea'):\n      inputElement = <textarea \n        className={styles.InputElement} \n        {...props.elementConfig} \n        value={props.value}/>;\n      break;\n    case ('select'):\n      inputElement = (<select \n        className={styles.InputElement} \n        value={props.value}>\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>{option.displayValue}</option>\n          ))}\n        </select>\n      );\n      break;\n    default: \n      inputElement = <input \n        className={styles.InputElement} \n        {...props.elementConfig} \n        value={props.value}/>;\n      break;\n  }\n \n  return (\n    <div className={styles.Input}>\n      <label className={styles.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\n\nexport default input;"]},"metadata":{},"sourceType":"module"}