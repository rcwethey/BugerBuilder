{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Desktop/rcwethey/React-Course/Burger-Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      puchaseable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceSubtraction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceSubtraction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      puchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    ;\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      puchaseable: this.state.puchaseable,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/ryanwethey/Desktop/rcwethey/React-Course/Burger-Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","puchaseable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredient","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceSubtraction","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n  //constructor (props) {\n  //    super(props);\n  //    this.state = {...}\n  //}\n  \n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4,\n    puchaseable: false\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({puchaseable: sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount +1;\n    const updatedIngredient = {...this.state.ingredients};\n    updatedIngredient[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n    this.updatePurchaseState(updatedIngredient);\n  }\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if(oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredient = {...this.state.ingredients};\n    updatedIngredient[type] = updatedCount;\n    const priceSubtraction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceSubtraction;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n    this.updatePurchaseState(updatedIngredient);\n  }\n\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0 \n    };\n    return (\n      <Aux>\n        <Modal />\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls \n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled= {disabledInfo}\n          puchaseable={this.state.puchaseable}\n          price={this.state.totalPrice} \n        />\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}