{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Desktop/rcwethey/React-Course/Burger-Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      puchaseable: false,\n      puchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceSubtraction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceSubtraction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('You Continued');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      puchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    ;\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCanceled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      puchaseable: this.state.puchaseable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/ryanwethey/Desktop/rcwethey/React-Course/Burger-Builder/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","puchaseable","puchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredient","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceSubtraction","purchaseHandler","purchasing","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n  //constructor (props) {\n  //    super(props);\n  //    this.state = {...}\n  //}\n  \n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4,\n    puchaseable: false,\n    puchasing: false\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({puchaseable: sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount +1;\n    const updatedIngredient = {...this.state.ingredients};\n    updatedIngredient[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n    this.updatePurchaseState(updatedIngredient);\n  }\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if(oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredient = {...this.state.ingredients};\n    updatedIngredient[type] = updatedCount;\n    const priceSubtraction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceSubtraction;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n    this.updatePurchaseState(updatedIngredient);\n  }\n\n  purchaseHandler = () => {\n    this.setState({purchasing: true});\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({purchasing: false});\n  }\n\n  purchaseContinueHandler = () => {\n    alert('You Continued');\n  }\n\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0 \n    };\n    return (\n      <Aux>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n          <OrderSummary \n            ingredients={this.state.ingredients}\n            purchaseCanceled={this.purchaseCancelHandler}\n            purchaseContinued={this.purchaseContinueHandler}\n            price={this.state.totalPrice}/>\n        </Modal>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls \n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled= {disabledInfo}\n          puchaseable={this.state.puchaseable}\n          price={this.state.totalPrice}\n          ordered={this.purchaseHandler}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}