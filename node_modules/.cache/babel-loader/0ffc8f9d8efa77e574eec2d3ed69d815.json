{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwethey/Documents/rcwethey/BugerBuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      puchaseable: false,\n      puchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredient = { ...this.state.ingredients\n      };\n      updatedIngredient[type] = updatedCount;\n      const priceSubtraction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceSubtraction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredient\n      });\n      this.updatePurchaseState(updatedIngredient);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-builder-82273.firebaseio.com/ingedients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(this.setState({\n      error: true\n    }));\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      puchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    ;\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Ingredients Cannot be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        puchaseable: this.state.puchaseable,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        purchaseCanceled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/ryanwethey/Documents/rcwethey/BugerBuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","puchaseable","puchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredient","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceSubtraction","purchaseHandler","purchasing","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n  //constructor (props) {\n  //    super(props);\n  //    this.state = {...}\n  //}\n  \n  state = {\n    ingredients: null,\n    totalPrice: 4,\n    puchaseable: false,\n    puchasing: false,\n    loading: false,\n    error: false\n  }\n\n  componentDidMount () {\n    axios.get('https://burger-builder-82273.firebaseio.com/ingedients.json')\n      .then(response => {\n        this.setState({ingredients: response.data});\n      })\n      .catch(this.setState({error: true}));\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({puchaseable: sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount +1;\n    const updatedIngredient = {...this.state.ingredients};\n    updatedIngredient[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n    this.updatePurchaseState(updatedIngredient);\n  }\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if(oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredient = {...this.state.ingredients};\n    updatedIngredient[type] = updatedCount;\n    const priceSubtraction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceSubtraction;\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredient});\n    this.updatePurchaseState(updatedIngredient);\n  }\n\n  purchaseHandler = () => {\n    this.setState({purchasing: true});\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({purchasing: false});\n  }\n\n  purchaseContinueHandler = () => {\n    const queryParams = [];\n    for(let i in this.state.ingredients) {\n    queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n    }\n    const queryString = queryParams.join('&')\n\n    this.props.history.push({\n      pathname:'/checkout',\n      search: '?' + queryString\n    });\n  }\n\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0 \n    };\n    let orderSummary = null;\n    let burger = this.state.error ? <p>Ingredients Cannot be loaded</p> : <Spinner />;\n\n    if(this.state.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls \n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled= {disabledInfo}\n          puchaseable={this.state.puchaseable}\n          price={this.state.totalPrice}\n          ordered={this.purchaseHandler}/>\n        </Aux> \n      );\n      orderSummary = <OrderSummary \n      ingredients={this.state.ingredients}\n      purchaseCanceled={this.purchaseCancelHandler}\n      purchaseContinued={this.purchaseContinueHandler}\n      price={this.state.totalPrice}/>;\n    }\n    if(this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n    \n    return (\n      <Aux>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}